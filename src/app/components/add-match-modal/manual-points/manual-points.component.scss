@use '../../../../style/variables.scss' as *;

.manual-points {
    .container-points {
        padding: 5em;
        display: grid;
        width: 100%;
        height: 75%;
        place-items: center;
        gap: 2.5em;

        // ðŸ‘‡ layout di default (desktop) = verticale
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr;
    }

    &.mobile {
        .container-points {
            grid-template-columns: 1fr;
            grid-template-rows: 1fr 1fr;
        }
        span {
            display: inline-block;
            font-size: 10vw;

        }
    }

    .box {
        background-color: rgba($secondary, 0.5);
        border-radius: $border-radius;
        width: 100%;
        height: 100%;
        display: grid;
        place-items: center;
        cursor: pointer;
        position: relative;
        transition: 0.2s all ease-in-out;

        span {
            font-size: 25vh;
        }

        display: grid;
        grid-template-columns: 1fr;

        button.tap {
            overflow: visible;
            text-align: center;
            display: block;
            height: 100%;
            width: 100%;
            position: relative;

            span {
                position: relative;
                z-index: 500;
            }
        }
    }

    .box2 {
        background-color: rgba($primary, 0.5);
    }

    .sets-container {
        font-size: 2em;
        text-align: center;
        max-width: 10em;
        margin: auto;
    }
}

.microphone-container {
    position: relative;
    top: 1em;
    font-size: 2em;
}

button {
    border: none;
    background-color: unset;
    position: relative;
}

.reset {
    background-color: $dark;
}

.player-indicator {
    position: absolute;
    filter: drop-shadow(0px 0px 30px black);
    display: flex;
    align-items: center;
    gap: 2em;
    top: -2em;

    &.left {
        text-align: left;
        left: 0;
    }

    &.right {
        text-align: right;
        flex-direction: row-reverse;
        right: 0;
    }

    img {
        border-radius: 100%;
        width: 175px;
        height: 175px;
        object-fit: cover;
    }
}

.actions {
    display: flex;
    justify-content: center;
    flex-direction: row-reverse;
    gap: 1em;
    padding: 0 5em;
}

.minus {
    background-color: #00000084;

}

.form-dark.manual-points {
    display: grid;
    place-items: center;
}

.select-players-container {
    display: grid;
    place-items: center;
    height: 100%;
}

.players-container-form {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    align-items: flex-end;
    padding: 0 6em;
    color: white;
    font-size: 1em;
    font-weight: bold;
    text-shadow: 0px 0px 5px black;
    max-width: 75%;

    input {
        width: 100%;
    }

    .player {
        filter: drop-shadow(0px 0px 30px black);

        &.left {
            text-align: left;
        }

        &.right {
            text-align: right;
        }

        img {
            border-radius: 100%;
            width: 175px;
            height: 175px;
            object-fit: cover;
        }
    }
}

button {
    cursor: pointer;
}

button:disabled {
    cursor: not-allowed;
    opacity: 0.6;
}

.button-container {
    position: absolute;
    bottom: 2em;
    right: 2em;
}

@media screen and (max-width: 768px) {
    .players-container-form {
        width: 100%;
        left: 0%;
        transform: translate(0%, -50%);
        padding: 0;
    }
}

@media screen and (max-width: 600px) {
    .players-container-form {
        padding: 0;
    }
}

@media screen and (min-width: 768px) and (max-width: 1024px) {
    .players-container-form {
        padding: 1em 3em;
    }
}

@media screen and (min-width: 1024px) and (max-width: 1280px) {
    .players-container-form {
        padding: 1em 5em;
    }

}